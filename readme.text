final project:
	description: an e-commerce app to order groceries from. 

	development scope: 
	[ (*) => phase-2 developement, not critical for mvp ];
	build two flask-apps for two user_types: customer and client. 
		Customer app, customer to be able browse products, add fund, add/update address, place order and track order status.
		Client app, client to be able to see orders, update the status of the order, see p&l summary
	db will be locally stored
	apps to be developed for mobile first and scaled to web with barebone webpages and minimum css 
	(*) once the apps are launched, the apps are to be developed on react.js as a Single Page Application and full css for best user experience

	modules:
		user_module:
			(*) Pre-login browsing
			registration module (name, mobile number, email_id, address, password(to be hashed))
			login module (email_id/ number, password)
			index: (product discovery) product ist, search, sort(high to low/ low-to-high), filter((*)category, price ranges)
			(*) category page
			product page: Product details, image, add_to_cart
			cart module: add to cart, delete from cart
			order confirmation: select address, expected delivery timeline, order cofirmation
			profile:
				cash:
					add_fund
				order:
					order_list
				address:
					list of addresses
					add address
					(*) modify address
					(*) delete address
		
		client_module:
			Login
			(*) index: order dashboard, P&L dashboard, stocks dashboard
			orders: Update order status (order_received/ order_shipped)
			(*) inventory
			(*) p&l:
			(*) products:  
			(*) users:
			(*) P&L: Payment received, Refund issued, total available _cash
		
	data structure:
		users: user_id, name, email_id, mobile number, cash
		address: user_id, address:{address_1:{Flat/building:#; Town: #; State: #, Pin: #}}, primary: #
		product: product_id, category_id, product_name, image, price, discount
		category: category_id, category name
		inventory: product_id, stock qty
		order: order_id: #, user_id: #, datetime: #, order_details: {product_id: #; order_qty: #}, order_status: received/deilvered, address
		transactions: tran_id, user_id, tran_type (order_payment/ order_refund/ add_fund), datetime, tran_status(deafult: success)


	header:
		logo,  account balance, name|profile
		top 3 categories(*), search
	
	user_module_routes:
		/
		/user_register
		/user_login
		/user_logout
		/product page
		/search
		/cart
		/order_confirmation
		/profile
		/profile/cash
		/profile/orders
		/profile/addresses

	client_module_routes:
		/ (order dashboard(order received), stock dashboard(available stocks/ out of stock)
		/client_orders (update order_status)
		/client_inventory (update stocks => product_id, stock qty)
		/client_p&l ((*)update cash)
		/client_products (update product catalogue)
		/client_users (update users)


dev plan:
	create file structure for flask app (customer app)
	create app.py and configure it with all the modules
	create index.html and layout.html
	create requirement.txt
	create db
	create tables
	enter dummy data
	import modules in app.py
	develope customer app first
	define session, routes and login 
	define functions in functions.py
	create route sub-routines
	develope index.html, create styles.css
	create all module pages
	change
	